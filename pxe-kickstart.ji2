{% set os = item[0] %}
{% set release = item[1] %}
{% set version = release['version'] | regex_replace('^([0-9]+)\\..*', '\\1')  %}
#version={{ os['name'] }}-{{ release['version'] }}
# System authorization information
auth --enableshadow --passalgo=sha512

cmdline
eula --agreed
install 
url --url="{{ release['pkg_repo'] | default(release['pxe_repo']) }}"

# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use=sda
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US

# Network information
#network  --bootproto=static --device=eno16777984 --gateway=172.31.128.1 --ip=172.31.130.90 --nameserver=172.31.128.10,172.31.128.1 --netmask=255.255.252.0 --ipv6=auto --activate
network  --bootproto=dhcp --device=link --ipv6=ignore --hostname={{ os['name'] }}-{{ version }} --activate
firewall --enabled --ssh
selinux --enforcing

# Root password
rootpw --iscrypted $6$eO8qpM9rbw7XB4F1$4a9etAPLLmX4MPi9GVd0eHhZtfrx3cZvYZ3/vkSIuHjEJPXvB1UX/HfQZ3vVloMLGYfqbCr7pD1lg9wwyn3xE1
# System timezone
timezone Europe/Warsaw --isUtc --ntpserver={{ ntp_server | join(',') }}
services --enabled="chronyd"
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda

# Partition clearing information
clearpart --none --initlabel --drives=sda
part /boot --ondrive=sda --asprimary --size=1000 --fstype=ext2 --label=boot
part pv.01 --ondrive=sda --asprimary --size=0 --grow
volgroup {{ os['name'] }} pv.01
logvol / --vgname={{ os['name'] }} --size=4000 --name={{ version }} --fstype=ext4 --label=root
logvol swap --vgname={{ os['name'] }} --size=1000 --name=swap --fstype=swap --label=swap

reboot

{% if os['name'] == 'rhel' %}
{% if version == '7' %}
repo --name=prs --baseurl={{ release['pkg_repo'] | default(release['pxe_repo']) }} --install
{% elif version == '8' %}
repo --name="prs-BaseOS" --baseurl={{ release['pkg_repo']| default(release['pxe_repo']) }} --install
repo --name="prs-AppStream" --baseurl={{ release['pkg_repo'] | default(release['pxe_repo']) | regex_replace('BaseOS','AppStream') | regex_replace('baseos','appstream') }} --install
{% endif %}
{% elif os['name'] == 'ol' %}
{% if version == '7' %}
repo --name=prs --baseurl={{ release['pkg_repo'] | default(release['pxe_repo']) }} --install
{% elif version == '8' %}
repo --name="AppStream" --baseurl={{ release['pkg_repo'] | default(release['pxe_repo']) | regex_replace('latest/','') | regex_replace('baseos','appstream') }}
{% endif %}
{% endif %}

%packages
{% if version == '7' %}
@^minimal
python
screen
{% elif version == '8' %}
@^minimal-environment
python3-pip
tmux
{% endif %}
kexec-tools
perl
nfs-utils
autofs
sssd-krb5
sssd-ldap
%end

%addon com_redhat_kdump --enable --reserve-mb="auto"
%end

%post
{% if version == "7" %}
ln -sf /usr/bin/python2 /usr/bin/python
{% elif version == "8" %}
{% if os['name'] == 'rhel' %}
sed -i 's#enabled=1#enabled=1\ngpgkey=http://{{ inventory_hostname }}/{{ os["name"] }}/{{ release["version"] }}/RPM-GPG-KEY-redhat-release#g' /etc/yum.repos.d/prs*
{% endif %}
ln -sf /usr/bin/python3 /usr/bin/python
{% endif %}
cat << EOF > /etc/profile.d/colorprompt.sh
if [ `id | cut -c 5` -eq 0 ]; then
	typeset +x PS1='\[\033[01;31m\]\h\[\033[01;34m\] \W #\[\033[00m\] '
else
	typeset +x PS1='\[\033[01;32m\]\u@\h\[\033[01;34m\] \w \$\[\033[00m\] '
fi
EOF
%end
