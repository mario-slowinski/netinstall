---
- name: "Download, verify, mount install images for '{{ distro }}'"
  hosts: netinstall
  tasks:
  - name: "Create '{{ os | selectattr('name','==',distro) | map(attribute='description') | list | first }}' image directory"
    tags: directory
    file:
      state: directory
      path: "{{ item['img_dir'] }}"
      owner: root
      group: "{{ http['user'] }}"
      mode: 0755
      setype: httpd_sys_content_t
    loop: "{{ os | selectattr('name','eq',distro) | list }}"
    when: item['name'] != 'solaris'
  - name: "Download '{{ os | selectattr('name','==',distro) | map(attribute='description') | list | first }}' image"
    tags: download
    get_url:
      url: "{{ item[1][1]['url'] }}"
      # for centos download boot iso
      # for ol download boot iso
      # for rhel just verify iso image checksum by pretending to download it into common soft directory
      dest: "{{ item[0]['img_dir'] +'/'+ item[1][1]['name'] }}"
      checksum: "{{ item[1][1]['sum'] }}"
      owner: root
      group: "{{ http['user'] }}"
      mode: 0644
      setype: httpd_sys_content_t
    loop: "{{ os | selectattr('name','eq',distro) | list | product(os | selectattr('name','eq',distro) | list | subelements('release') | flatten | selectattr('image','defined') | list | subelements('image')) | list }}"
    when: item[0]['name'] != 'solaris'
  - name: "Mount '{{ os | selectattr('name','==',distro) | map(attribute='description') | list | first }}' repo"
    tags: mount
    mount:
      src: "{{ item[0]['img_dir'] +'/'+ item[1][1]['name'] }}"
      path: "{{ item[0]['repo_dir'] +'/'+ item[1][0]['version'] }}"
      fstype: hsfs
      opts: "ro,nosuid,noglobal,maplcase,rr,traildot"
      state: mounted
    loop: "{{ os | selectattr('name','eq',distro) | list | product(os | selectattr('name','eq',distro) | list | subelements('release') | flatten | selectattr('image','defined') | list | subelements('image')) | list }}"
    when: item[0]['name'] != 'solaris'
  - name: "Mount '{{ os | selectattr('name','==',distro) | map(attribute='description') | list | first }}' pxe"
    tags: mount
    mount:
      src: "{{ item[0]['repo_dir'] +'/'+ item[1][0]['version'] }}"
      path: "{{ pxe_dir +'/'+ item[0]['name'] + '/'+ item[1][0]['version'] }}"
      fstype: lofs
      opts: "ro"
      state: mounted
    loop: "{{ os | selectattr('name','eq',distro) | list | product(os | selectattr('name','eq',distro) | list | subelements('release') | flatten | selectattr('image','defined') | list | subelements('image')) | list }}"
    when: item[0]['name'] != 'solaris'
  - name: "Image for '{{ os | selectattr('name','==',distro) | map(attribute='description') | list | first }}'"
    tags: debug
    debug:
      msg: 
      - "Download:   {{ item[1][1]['url'] }} -> {{ item[0]['img_dir'] +'/'+ item[1][1]['name'] }}"
      - "Mount repo: {{ item[0]['img_dir'] +'/'+ item[1][1]['name'] +' -> '+ item[0]['repo_dir'] +'/'+ item[1][0]['version'] }}"
      - "Mount pxe:  {{ item[0]['repo_dir'] +'/'+ item[1][0]['version'] +' -> '+ pxe_dir +'/'+ item[0]['name'] + '/'+ item[1][0]['version'] }}"
    loop: "{{ os | selectattr('name','eq',distro) | list | product(os | selectattr('name','eq',distro) | list | subelements('release') | flatten | selectattr('image','defined') | list | subelements('image')) | list }}"
    when: item[0]['name'] != 'solaris'
